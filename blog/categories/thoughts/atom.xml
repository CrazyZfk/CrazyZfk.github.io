<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Thoughts | crazyzfk's blog]]></title>
  <link href="http://crazyzfk.github.io/blog/categories/thoughts/atom.xml" rel="self"/>
  <link href="http://crazyzfk.github.io/"/>
  <updated>2020-08-09T12:21:46+08:00</updated>
  <id>http://crazyzfk.github.io/</id>
  <author>
    <name><![CDATA[zfk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Be a Senior Sowftware Enginner]]></title>
    <link href="http://crazyzfk.github.io/blog/2020/08/09/how-to-be-a-senior-sowftware-enginner/"/>
    <updated>2020-08-09T10:12:04+08:00</updated>
    <id>http://crazyzfk.github.io/blog/2020/08/09/how-to-be-a-senior-sowftware-enginner</id>
    <content type="html"><![CDATA[<blockquote><p>这个blog的时候我并不是一个senior的工程师，我在思考如何成为一个senior的工程师。</p></blockquote>

<p>距离上个blog已经过去几个月了，这些时间我自己对于未来的规划也是几经变动。一段时间为了下一代想这样做，另一段时间想着为了父母那样做。自己每天的时间也被这两种想法来回拉扯，一段时间下班后干这个，一段时间下班后做另一个。总之，这段时间和我以前浪费的时间一样没有给自己带来更多的增长。</p>

<p>一个星期以来我一直在反思自己这个左右摇摆的性格给自己带来的危害，想着如何突破这个隐形的枷锁。我将自己几个月以来的想法进行了抽象和总结，其中的共同之处总结到了一起，得到一个结论就是无论选择什么样的规划成为senior的工程师都是必须的。与其纠结选哪一个，不如先把事情做了。</p>

<h2>问题</h2>

<p>要成为一个senior的工程师，首先要做的是找到自己阻碍自己成长的问题。</p>

<h3>想的太多做的太少</h3>

<p>这个应该是我最大的问题了，毕业四年以来除了在公司里面学到的东西就再无其他了。自己也曾想过做很多的事情，但最后也是不了了之。</p>

<p>这里我列举下自己从大学到现在想做的事情：</p>

<ol>
<li>参加ACM比赛，最后败给了游戏</li>
<li>想做Linux系统开发，最后败给了游戏</li>
<li>想做Linux内核开发，败给了各种美剧</li>
<li>想把各种分布式存储的东西学习一遍，败给了懒惰</li>
</ol>


<p>回想一下过去感觉自己除了工作之外确实是一事无成，自己的懒惰和自控力是最大的原因。自己想了很多的事情，但是真正坚持做到最后的却是一个也没有。每个技术都是浅尝辄止，没有深入地了解过。</p>

<h3>英语太差</h3>

<p>这个没什么好说的了，作为一个developer英语的重要性毋庸置疑。几乎所有的有价值的技术文档都是英语的，中文环境里面的资料无论是质量还是数量都差太多了。自己在阅读这些英语资料磕磕绊绊，无法坚持下来。</p>

<h3>没有产品</h3>

<p>除了在公司的项目，我再也没有在其他的地方写过代码。自己的能力全要依赖公司里面的项目来证明，而这些项目我在其中的责任就是领任务，完成这些任务。这些项目从立项到需求再到任务，这些中间的阶段我都没有参与过，那么这些项目证明我能力的效果就大打折扣。没有自己的产品就意味着没有自己的品牌，无法有效证明自己有能力承担更加重要的任务。将自己的作品通过GitHub展示出来，让别人能实实在在地看到我的代码，我设计这个产品的思路。这些作品的说服力可要比简历上面的公司项目强的多，公司的项目只能口述，这个可以看得见摸的着。</p>

<h3>表达能力差</h3>

<p>作为一个developer我的表达能力和说服别人的能力太差了，工作以来对于上面交代的任务都是 “是，是，是” “好，好，好”， 很少表达自己的看法，即使自己有想法也无法提供充足的理由来说服别人。这个虽然不是一个技术人员必须的能力，但是如果要成为senior的工程师，这个能力也是必须的。</p>

<h2>怎么做</h2>

<p>怎么做是这个blog的最核心的内容，网络上有很多如何成为senior的文章和视频，大部分都很抽象，大道理很多具体怎么实施又要看每个人的理解。我打算根据自己在上面提出来的问题，先修正问题，先把上面的问题解决了，在考虑下个阶段怎么做。</p>

<p><strong>英语</strong>，这个应当是首先要解决的问题。从初中学习英语到现在十几年的时间也没学出个什么东西，应试教育的英语学习对于我的这个目的来说是完全不适用的。我就当自己没有任何英语的基础来学习英语，从背单词开始。很多人不建议背单词觉得太无聊，而且效率太低了。我不这么认为，单词应当是良好的基础，有了这个基础其他英语的学习就会事半功倍。背单词不是要求把大部头词典上的每个单词和每个单词的意思都记住，而是有选择的背。怎么选择哪，我建议直接背雅思词汇即可。单词背完后，学习基础的语法知识。当这两步完成后就可以开始大量阅读英语文章，文章中的单词和语法可以协助我们来复习和扩从原来的积累。英语文章的来源可以是下面几个：</p>

<ol>
<li>BBC News</li>
<li>经济学人的往期文章</li>
<li>你喜欢的英文技术博客。</li>
</ol>


<p>阅读这些内容已经不在是问题的时候，就可以尝试使用英语来写文章了。这些文章可以是你自己的博客，也可以是工作中使用的邮件。总之，就是能用英语写作的地方一律用英语。最后是听力的部分，这部分完全可以看youtube来解决，当能完全无障碍的理解了youtuber们都说了什么的时候就差不多了。至于说的部分就只能找途径和外国人练习了，可以考虑去菲律宾英语游学一个月来练习。</p>

<p><strong>个人作品</strong>，一个能用的作品需要前后端的内容，我目前只会后端技术。所以为了完成一个产品，我需要自己学习下前端的技术，为了方便和简单js和vue是我的首选。这些作品我会在后面的blog中一点一点地展示出来。详细记录自己设计流程，开发流程。</p>

<p><strong>BLOG</strong>，写blog可以帮助我解决表达能力和自制力差的问题。通过blog的每周总结来确定自己作品的进度，每周能提醒自己做到哪了。这些blog一旦发布出去，自己也不好意思半途而废。介绍自己的项目，确定技术选型的过程和对于功能的设计，记录这些能很好的锻炼自己在表达方面的能力。blog同时也能成为我的一个展示的窗口，通过一篇篇的blog我可以向外输出自己的价值。在blog中写下自己对某项技术的总结，尝试教会别人自己新学习的技术也能检验自己的掌握程度。</p>

<h2>写在最后的话</h2>

<p>今天之所以要单独写篇絮絮叨叨的bolog来总结自己这段时间的想法，主要是要把这些东西以一种形式记录下来。这些东西不应该只是想想就算了的，应当是有反馈有闭环的。这些东西一旦写下了，就完成了从想法到实际的转换，不再是可以任意改变的东西。所有上面的那些都是要一一实现的，不是可以随便放弃的。</p>

<p><strong>不要从明天开始，不要从下午13:00开始，要从现在、此刻开始。</strong></p>
]]></content>
  </entry>
  
</feed>
